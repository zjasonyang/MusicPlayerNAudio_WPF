<UserControl x:Class="NaudioPlayer.Views.MusicPlayControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NaudioPlayer.Views"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             >
    

    <Border Background="#030303" CornerRadius="20" Margin="0 0 0 0">
        <Grid Width="758" Height="150">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!--slider bar-->

            <Slider Grid.Row="0"
                    Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                    Margin="40 20 40 10"
                    Minimum="0" Maximum="{Binding CurrentTrackLenght, Mode=OneWay}"
                    Value="{Binding UiTrackPosition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    x:Name="TrackPositionSlider" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ValueChanged">
                        <i:InvokeCommandAction Command="{Binding UiTrackValueChangedCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseDown">
                        <i:InvokeCommandAction Command="{Binding TrackControlMouseDownCommand}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="PreviewMouseUp">
                        <i:InvokeCommandAction Command="{Binding TrackControlMouseUpCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Slider>
            
            <!--current track play time-->
            <Grid Grid.Row="1" Margin="40 0 40 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Style="{StaticResource playtimeText}" Content="{Binding CurrentTrackPositionString}"
                       HorizontalAlignment="Left" Margin="0 -10 0 0" />

                <Label Grid.Column="1" Style="{StaticResource playtimeText}" Content="{Binding CurrentTrackLenghtString}"
                       HorizontalAlignment="Right" Margin="0 -10 0 0" />
            </Grid>
            
            <!--play control button-->
            <Grid Grid.Row="2">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Width="30" Height="30" Margin="5" Command="{Binding StopPlaybackCommand}" Style="{StaticResource playerButton}" >
                        <Icon:PackIconMaterial Kind="Stop"/>
                    </Button>
                    <Button Width="30" Height="30" Margin="5" Command="{Binding RewindToStartCommand}" Style="{StaticResource playerButton}" >
                        <Icon:PackIconMaterial Kind="SkipPrevious" />
                    </Button>
                    <Button Width="60" Height="60" Margin="10" Command="{Binding PlayPauseCommand}" Style="{StaticResource playerButton}" >
                        <Icon:PackIconMaterial Kind="PlayPause" Width="40" Height="40"/>
                    </Button>
                    <Button Width="30" Height="30" Margin="5" Command="{Binding ForwardToEndCommand}" Style="{StaticResource playerButton}" >
                        <Icon:PackIconMaterial Kind="SkipNext"/>
                    </Button>
                    <Button Width="30" Height="30" Margin="5" Command="{Binding ShuffleCommand}" Style="{StaticResource playerButton}" >
                        <Icon:PackIconMaterial Kind="Shuffle"/>
                    </Button>
                    <Button Width="30" Height="30" Margin="5" Command="{Binding ToggleInterludeCommand}"  >
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="#363435"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsInterludeEnabled}" Value="false">
                                        <Setter Property="Background" Value="White"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Icon:PackIconMaterial Kind="MusicNotePlus" />
                    </Button>
                </StackPanel>

                <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 20 30 10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Icon:PackIconMaterial Kind="VolumeHigh" 
                                           Width="15" 
                                           Height="15" 
                                           VerticalAlignment="Center" 
                                           Foreground="Gray" 
                                           Grid.Column="0" 
                                           Grid.Row="0"/>


                    <Slider Orientation="Horizontal"
                            Minimum="0" Maximum="1.0"
                            Width="80"
                            Value="{Binding CurrentVolume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            x:Name="VolumeSlider"
                            Style="{StaticResource VolumeSliderStyle}"
                            Grid.Column="1" 
                            Grid.Row="0"
                            Margin="10 5 10 0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding VolumeControlValueChangedCommand}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>

                    <TextBlock Text="{Binding CurrentVolume, StringFormat={}{0:P0}}" 
                               Margin="10,0,0,0" 
                               VerticalAlignment="Center" 
                               Foreground="gray" 
                               TextAlignment="Center" 
                               Grid.ColumnSpan="2" 
                               Grid.Row="1"/>
                </Grid>
            </Grid>

        </Grid>
    </Border>

</UserControl>

<Window x:Class="NaudioPlayer.Views.WeeklyScheduleWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:uc="clr-namespace:NaudioPlayer.Views"
        xmlns:converters="clr-namespace:NaudioPlayer.Converters"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="Weekly Schedule" Height="450" Width="800">
    
    <Window.Resources>
        <converters:DayOfWeekToStringConverter x:Key="DayOfWeekToStringConverter" />
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Schedule display area -->
        <ListView x:Name="scheduleListView" Grid.Row="0" ItemsSource="{Binding WeeklySchedules}" SelectedItem="{Binding SelectedWeeklySchedule}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" Width="100"/>
                    <GridViewColumn Header="Playlist" DisplayMemberBinding="{Binding PlaylistPath}" Width="100"/>
                    <GridViewColumn Header="Days" DisplayMemberBinding="{Binding DaysOfWeekString}" Width="200"/>
                    <GridViewColumn Header="Start Time" DisplayMemberBinding="{Binding StartTime, StringFormat={}{0:hh\\:mm}}" Width="100"/>
                    <GridViewColumn Header="End Time" DisplayMemberBinding="{Binding EndTime, StringFormat={}{0:hh\\:mm}}" Width="100"/>
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Edit area -->


        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0" Text="{Binding SelectedWeeklySchedule.Name, UpdateSourceTrigger=PropertyChanged}" />
            <ComboBox Grid.Column="1" ItemsSource="{Binding AvailablePlaylists}" SelectedItem="{Binding SelectedWeeklySchedule.PlaylistPath, UpdateSourceTrigger=PropertyChanged}" />

            <ItemsControl Grid.Column="2" ItemsSource="{Binding SelectedDays}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding DayName}"
                      IsChecked="{Binding IsSelected, Mode=TwoWay}"
                      Margin="0,0,5,0" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <xctk:TimePicker Grid.Column="3" 
                     Format="Custom"
                     FormatString="HH:mm"
                     Value="{Binding SelectedWeeklySchedule.StartTime, UpdateSourceTrigger=PropertyChanged}"/>
            <xctk:TimePicker Grid.Column="4" 
                     Format="Custom"
                     FormatString="HH:mm"
                     Value="{Binding SelectedWeeklySchedule.EndTime, UpdateSourceTrigger=PropertyChanged}"/>


            <!--<ComboBox Grid.Column="3" ItemsSource="{Binding AvailableTimes}" SelectedItem="{Binding SelectedWeeklySchedule.StartTime, UpdateSourceTrigger=PropertyChanged}" />
            <ComboBox Grid.Column="4" ItemsSource="{Binding AvailableTimes}" SelectedItem="{Binding SelectedWeeklySchedule.EndTime, UpdateSourceTrigger=PropertyChanged}" />-->

            <StackPanel Grid.Column="5" Orientation="Horizontal" Margin="10,0,0,0">
                <Button Content="Add" Command="{Binding AddScheduleCommand}" Margin="0,0,5,0"/>
                <Button Content="Save" Command="{Binding SaveScheduleCommand}" Margin="0,0,5,0"/>
                <Button Content="Delete" Command="{Binding DeleteScheduleCommand}"/>
            </StackPanel>
            <Popup x:Name="SaveStatusPopup"
                   IsOpen="{Binding IsPopupOpen}"
                   Placement="Center"
                   StaysOpen="False">
                <Border Background="LightGray"
                        Padding="20">
                    <TextBlock Text="{Binding SaveStatusMessage}" />
                </Border>
            </Popup>
        </Grid>
    </Grid>

</Window>

